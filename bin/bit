#!/usr/bin/env node
/**
  Copyright (C) 2012 Jason Dooley
  Licensed under MIT
*/

var fs = require('fs'), path = require('path'),
  aparser = require('aparser'),
  Bit, project;

Bit = {
  initialize: function () {
    var location = process.env.PWD,
      directory = location+'/.bit',
      self = this;

    path.exists(directory, function (exists) {
      if (exists) {
        console.log("Bit is already initialized");
      } else {
        self._createBitConfig(directory);
      }
    });
  },

  _createBitConfig: function (dir) {
    var configFile = dir+'/config.json', config = {};
    fs.mkdir(dir);
    config.root = dir;
    config.repositories = {};
    fs.writeFile(configFile,JSON.stringify(config), function (err) {
      console.log(err ? "Error creating Bit config." : "Bit initialized successfully.");
    });
  },

  getConfig: function () {

  },

  writeConfig: function (config) {

  },

  addRepository: function (args) {
    console.log('addRepository',args);
  },

  performOn: function (repoName,args) {

  },

  removeRepository: function (names) {

  },

  perform: function (todo,name) {

  },

  proceed: function (args) {

  }
};


aparser.on('init',function (arg,idx) {
  Bit.initialize(arg);
});

aparser.on('add-repository',function (arg,idx) {
  Bit.addRepository(arg);
});

aparser.parse(process.argv);